"""Initial migration

Revision ID: 7a3c2ea847ec
Revises: 
Create Date: 2025-05-30 17:02:48.939853

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7a3c2ea847ec'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connector',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('charger_id', sa.Integer(), nullable=False),
    sa.Column('connector_id', sa.Integer(), nullable=False),
    sa.Column('connector_type', sa.String(length=255), nullable=False),
    sa.Column('max_power_kw', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['charger_id'], ['charger.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.drop_table('ocpp_message_log')
    op.drop_column('charger', 'max_power_kw')
    op.drop_column('charger', 'connector_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('charger', sa.Column('connector_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('charger', sa.Column('max_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.create_table('ocpp_message_log',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('charger_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('direction', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('correlation_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('ocpp_message_log_pkey'))
    )
    op.drop_table('connector')
    # ### end Alembic commands ###
